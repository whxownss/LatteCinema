<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Reservation">
	<insert id="insert" parameterType="ReservationDTO">
		INSERT INTO RESERVATION 
		 	 ( DATE 
		 	 , TITLE
		 	 , CINEMA
		 	 , SEAT
		 	 , P1
		 	 , P2
		 	 , P3
		 	 , P_SUM
		 	 , PAID_AMOUNT
		 	 , PAY_METHOD
		 	 , CARD_NAME
		 	 , CARD_NUMBER
		 	 , BUYER_TEL
		 	 , SUCCESS
		 	 , BUYER_NAME
		 	 , MERCHANT_UID
		 	 , SCR_IDX
		 	 , S_TIME
		 	 , LO_IDX
		 	 , CI_IDX
		 	 , SCH_IDX
		 	 , MOV_TYPE
		 	 , MOV_IDX
		 	 , MEM_ID
		 	 , PAY_TIME
		 	 )  
		VALUES 
			 ( LEFT(#{date} ,LENGTH(#{date}) - 4) 
			 , #{title}
			 , #{cinema}
			 , #{seat}
			 , #{p1}
			 , #{p2}
			 , #{p3}
			 , CAST(CAST(#{p1} AS UNSIGNED) + CAST(#{p2} AS UNSIGNED) + CAST(#{p3} AS UNSIGNED) AS CHAR(20))
			 , #{paidAmount}
			 , #{payMethod}
			 , #{cardName}
			 , #{cardNumber}
			 , #{buyerTel}
			 , #{success}
			 , #{buyerName}
			 , #{merchantUid}
			 , #{scrIdx}
			 , #{sTime}
			 , #{loIdx}
			 , #{ciIdx}
			 , #{schIdx}
			 , #{movType}
			 , #{movIdx}
			 , #{memId}
			 , #{payTime}
			 )
	</insert>	
	
	<select id="select" parameterType="ReservationDTO" resultType="String">
		SELECT SEAT
		  FROM RESERVATION
		 WHERE 1 = 1
		   AND SCR_IDX = #{scrIdx}
		   AND DATE_FORMAT(DATE, '%Y-%m-%d') = #{dateC}
		   AND S_TIME = #{sTime}
		   AND TITLE = #{title}
		   AND CINEMA = #{cinema}
 		   AND SUCCESS != 'false'       <!-- 환불 del -> upd 변경후 -->
		 UNION
		SELECT SEAT_C "SEAT"
		  FROM SEAT
		 WHERE 1 = 1
		   AND LO_IDX = #{loIdx}
		   AND CI_IDX = #{ciIdx}
		   AND MOV_TYPE = #{movType}
		   AND SCH_IDX = #{schIdx}
		   AND DATE_FORMAT(DATE_C, '%Y-%m-%d') = #{dateC}
	</select>
	
	<select id="selectSameSeat" parameterType="SeatDTO" resultType="Integer">
		SELECT COUNT(*)
		  FROM SEAT
		 WHERE 1 = 1
		   AND LO_IDX = #{loIdx}
		   AND CI_IDX = #{ciIdx}
		   AND MOV_TYPE = #{movType}
		   AND SCH_IDX = #{schIdx}
		   AND DATE_C = #{dateC}
		   AND (
		   <foreach collection="seatC.split(',')" item="seat" index="i" separator="OR">
		   	   FIND_IN_SET(#{seat}, REPLACE(SEAT_C, ' ', '')) > 0
		   </foreach>
		   	   )
	</select>
	
	<insert id="insertSeatInfo" parameterType="SeatDTO">
		INSERT INTO SEAT
		     ( MEM_ID
		     , LO_IDX
		     , CI_IDX
		     , MOV_TYPE
		     , SCH_IDX
		     , SEAT_C
		     , DATE_C
		     , INSERT_TIME
		     )
		VALUES
			 (
			   #{memId}
			 , #{loIdx}
		     , #{ciIdx}
			 , #{movType}
			 , #{schIdx}
			 , REPLACE(#{seatC}, ',', ', ')
			 , #{dateC}
			 , NOW()
			 )	 
	</insert>
	
	<delete id="deleteSeatInfo" parameterType="String">
		DELETE S
		  FROM SEAT S
		  JOIN RESERVATION R
		    ON S.LO_IDX = R.LO_IDX
		   AND S.CI_IDX = R.CI_IDX
		   AND S.MOV_TYPE = R.MOV_TYPE
		   AND S.SCH_IDX = R.SCH_IDX
		 WHERE R.MERCHANT_UID = #{mid}
	</delete>
	
	<delete id="delete" parameterType="String">
		DELETE S
		  FROM SEAT S
		  LEFT
		  JOIN (SELECT *				<!-- 환불 del -> upd 변경후 -->
				  FROM RESERVATION
				 WHERE SUCCESS != 'false') R  
		    ON S.MEM_ID = R.MEM_ID
		   AND S.LO_IDX = R.LO_IDX
		   AND S.CI_IDX = R.CI_IDX
		   AND S.SCH_IDX = R.SCH_IDX
		   AND S.MOV_TYPE = R.MOV_TYPE
		   AND S.SEAT_C = R.SEAT
		 WHERE 1 = 1 
		   AND R.SEAT IS NULL
		 <if test="memId != null">
		   AND S.MEM_ID = #{memId}
		 </if>
		 <if test="memId == null">
		   AND TIMESTAMPDIFF(SECOND, S.INSERT_TIME, NOW()) >= 45
		 </if>
	</delete>
	
	<select id="selectTimeOverSeat" parameterType="SeatDTO" resultType="Integer">
		SELECT COUNT(*)
		  FROM SEAT
		 WHERE 1 = 1
		   AND LO_IDX = #{loIdx}
		   AND CI_IDX = #{ciIdx}
		   AND MOV_TYPE = #{movType}
		   AND DATE_C = #{dateC}
		   AND SEAT_C = REPLACE(#{seatC}, ',', ', ')
	</select>
	
	<update id="refundRes" parameterType="String">
		UPDATE RESERVATION
		   SET SUCCESS = 'false'
		     , REFUND_TIME = NOW()
		 WHERE 1 = 1 
		   AND MERCHANT_UID = #{mid}
		   AND TIMESTAMPDIFF
		   	   (MINUTE, NOW()
		   	    , STR_TO_DATE(CONCAT_WS(' ', DATE_FORMAT(DATE, '%Y-%m-%d'), S_TIME), '%Y-%m-%d %H:%i')) > 30  -- 환불 가능 시간 설정
	</update>
	
	
</mapper>